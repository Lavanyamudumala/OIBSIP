import java.util.Random;
import java.util.Scanner;
import javax.swing.JOptionPane;
public class Number {
    public static void main(String[] args) {
        int minRange = 1;
        int maxRange = 100;
        int maxAttempts = 5;
        int totalScore = 0;
        boolean playAgain = true;

        while (playAgain) {
            int randomNumber = generateRandomNumber(minRange, maxRange);
            int score = playGame(randomNumber, maxAttempts);
            totalScore += score;

            JOptionPane.showMessageDialog(null, "Your score for this round: " + score + "\nTotal score: " + totalScore);

            int choice = JOptionPane.showConfirmDialog(null, "Do you want to play again?", "Play Again", JOptionPane.YES_NO_OPTION);
            if (choice != JOptionPane.YES_OPTION)
                playAgain = false;
        }

        JOptionPane.showMessageDialog(null, "Thanks for playing! Your final score: " + totalScore);
    }

    public static int generateRandomNumber(int min, int max) {
        Random random = new Random();
        return random.nextInt(max - min + 1) + min;
    }

    public static int playGame(int randomNumber, int maxAttempts) {
        int attempts = 0;
        int guessedNumber = 0;

        while (attempts < maxAttempts && guessedNumber != randomNumber) {
            try {
                String input = JOptionPane.showInputDialog("Guess the number (between 1 and 100):");
                guessedNumber = Integer.parseInt(input);

                if (guessedNumber == randomNumber) {
                    JOptionPane.showMessageDialog(null, "Congratulations! You guessed the number.");
                } else if (guessedNumber < randomNumber) {
                    JOptionPane.showMessageDialog(null, "Too low! Try again.");
                } else {
                    JOptionPane.showMessageDialog(null, "Too high! Try again.");
                }
                attempts++;
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Invalid input! Please enter a valid number.");
            }
        }

        int score = maxAttempts - attempts + 1; // Giving points based on the number of attempts
        return score > 0 ? score : 0;
    }
}
